<?xml version="1.0" encoding="UTF-8"?>

<checkstyle-metadata>
  <module>
    <check name="ImportControlCheck" fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck" parent="com.puppycrawl.tools.checkstyle.TreeWalker">
      <description><![CDATA[<p>
 Controls what can be imported in each package and file. Useful for ensuring
 that application layering rules are not violated, especially on large projects.
 </p><p>
 You can control imports based on the a package name or based on the file name.
 When controlling packages, all files and sub-packages in the declared package
 will be controlled by this check. To specify differences between a main package
 and a sub-package, you must define the sub-package inside the main package.
 When controlling file, only the file name is considered and only files processed by
 <a href="https://checkstyle.org/config.html#TreeWalker">TreeWalker</a>.
 The file's extension is ignored.
 </p><p>
 Short description of the behaviour:
 </p><p>
 The DTD for a import control XML document is at
 <a href="https://checkstyle.org/dtds/import_control_1_4.dtd">
 https://checkstyle.org/dtds/import_control_1_4.dtd</a>.
 It contains documentation on each of the elements and attributes.
 </p><p>
 The check validates a XML document when it loads the document. To validate against
 the above DTD, include the following document type declaration in your XML document:
 </p>]]></description>
      <properties>
        <property name="file" type="java.net.URI" default-value="null">
          <description><![CDATA[Specify the location of the file containing the
 import control configuration. It can be a regular file, URL or resource path.
 It will try loading the path as a URL first, then as a file, and finally as a resource.]]></description>
        </property>
        <property name="path" type="java.util.regex.Pattern" default-value=".*">
          <description><![CDATA[Specify the regular expression of file paths to which
 this check should apply. Files that don't match the pattern will not be checked.
 The pattern will be matched against the full absolute file path.]]></description>
        </property>
      </properties>
      <message-keys>
        <message-key key="import.control.disallowed"/>
        <message-key key="import.control.missing.file"/>
        <message-key key="import.control.unknown.pkg"/>
      </message-keys>
    </check>
  </module>
</checkstyle-metadata>
